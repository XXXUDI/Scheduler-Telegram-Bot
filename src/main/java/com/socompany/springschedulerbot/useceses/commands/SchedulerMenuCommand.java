package com.socompany.springschedulerbot.useceses.commands;

import com.socompany.springschedulerbot.common.CommonInfo;
import com.socompany.springschedulerbot.persistant.dto.ButtonData;
import com.socompany.springschedulerbot.persistant.dto.UserResponseDto;
import com.socompany.springschedulerbot.service.TelegramBotService;
import com.socompany.springschedulerbot.service.UserService;
import com.socompany.springschedulerbot.useceses.commands.interfaces.Command;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.Map;

import static com.socompany.springschedulerbot.useceses.commands.enums.CommandType.*;

@Component
@Slf4j
@RequiredArgsConstructor
public class SchedulerMenuCommand implements Command {

    private final TelegramBotService telegramBotService;
    private final UserService userService;

    private static final Map<Boolean, String> EMOJIS = Map.of(
            true, "‚úÖ",
            false, "‚ùå"
    );

    @Override
    public void execute(CommonInfo commonInfo) {
        createSchedulerMenuMessage(commonInfo);
    }

    private void createSchedulerMenuMessage(CommonInfo commonInfo) {
        String text = getMenuText();

        userService.findByChatId(commonInfo.getChatId()).ifPresentOrElse(
                user -> {
                    List<ButtonData> buttonDataList = buildButtons(user);
                    telegramBotService.editMessage(
                            commonInfo.getChatId(),
                            commonInfo.getMessageId(),
                            text,
                            buttonDataList,
                            2,
                            true
                    );
                },
                () -> log.warn("User with chatId {} not found", commonInfo.getChatId())
        );
    }

    private String getMenuText() {
        return """
                –ù–∞–ª–∞—à—Ç—É–π —â–æ–¥–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: 

                –í–∏–±–µ—Ä–∏ –ª–∏—à–µ —Ç–µ, —â–æ —Ö–æ—á–µ—à –ø–æ–ª—É—á–∞—Ç–∏:
                """;
    }

    private List<ButtonData> buildButtons(UserResponseDto user) {
        return List.of(
                new ButtonData("‚òÄÔ∏è –ü–æ–≥–æ–¥–∞ " + EMOJIS.get(user.isWeatherReminderEnabled()), WEATHER.getCommand()),
                new ButtonData("üéâ –ü–æ–¥—ñ—ó " + EMOJIS.get(user.isEventsReminderEnabled()), EVENTS.getCommand()),
                new ButtonData("üí∞ –ö—É—Ä—Å –ë—ñ—Ç–∫–æ—ó–Ω–∞ " + EMOJIS.get(user.isBitcoinPriceReminderEnabled()), BITCOIN.getCommand()),
                new ButtonData("üìà –ö—É—Ä—Å–∏ –≤–∞–ª—é—Ç " + EMOJIS.get(user.isCurrencyPriceReminderEnabled()), CURRENCY.getCommand()),
                new ButtonData("‚è∞ –ß–∞—Å –≤—ñ–¥–ø—Ä–∞–≤–∫–∏: 09:00 üïò (–ó–º—ñ–Ω–∏—Ç–∏)", CHANGE_DATE.getCommand())
        );
    }
}

